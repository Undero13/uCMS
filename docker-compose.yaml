version: '3.7'

services: 
  deno:
    working_dir: /server-app
    container_name: deno
    build: 
      context: ./build/deno
    command: "denon start"
    ports: 
      - 3000:3000
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.deno.rule=Host(`ucms.docker.localhost`) && PathPrefix(`/api`)"
    #   - "traefik.http.services.deno.loadbalancer.server.port=3000"
    volumes:
      - ./server:/server-app

  node:
    working_dir: /app-client
    container_name: node
    image: node:14-alpine
    command: "npm start"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node.rule=Host(`ucms.docker.localhost`)"
      - "traefik.http.services.node.loadbalancer.server.port=4200"
    volumes: 
      - ./client:/app-client 
  
  mongo:
    container_name: mongodb
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: rootpassword
    ports: 
      - 8081:8081
  

  proxy:
    container_name: proxy
    image: traefik:v2.2
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "5000:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

